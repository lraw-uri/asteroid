#!/usr/bin/env python
###########################################################################################
# Asteroid toplevel driver
#
# (c) University of Rhode Island
###########################################################################################

import cProfile
import sys
import os
from asteroid_compile import compile
from asteroid_version import VERSION
from asteroid_globals import redundant_clause_detector_flags

def display_help():
    print("usage: asteroid-cc [-t][-v][-w][-l] <input file>")
    print("")
    print("command line flags:")
    print(" -t    AST dump flag")
    print(" -v    version flag")
    print(" -w    disable tree walk flag")
    print(" -l    disable prologue flag")
    print(" -h    display help flag")


# defaults for the flags - when the flag is set on the command line
# it simply toggles the default value in this table.
flags = {
    '-t' : False, # AST dump flag
    '-v' : False, # version flag
    '-l' : True,  # prologue flag
    '-h' : False, # display help flag
}

flag_names = list(flags.keys())

for fl in sys.argv:
    if fl[0] != '-':
        continue
    elif fl not in flag_names:
        print("unknown flag {}".format(fl))
        sys.exit(0)
    flags[fl] = not flags[fl]

if flags['-h'] or len(sys.argv) == 1:
    display_help()
    sys.exit(0)

if flags['-v']:
    print("** Asteroid Version {} **".format(VERSION))
    sys.exit(0)


input_file = sys.argv[-1]

if not os.path.isfile(input_file):
    print("unknown file {}".format(input_file))
    sys.exit(0)

f = open(input_file, 'r')
input_stream = f.read()
f.close()

# execute compiler
tree_code = compile(input_stream=input_stream,
                    input_name = input_file,
                    tree_dump=flags['-t'],
                    prologue=flags['-l'])

print("# compiled version of '{}'".format(input_file))
print("# NOTE: the env var PYTHONPATH has to point to the 'code' folder ")
print("# of the Asteroid installation")
print("")
print("from asteroid_interp import walk")
print("code = {}".format(str(tree_code)))
print("walk(code)")
